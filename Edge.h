/**************************************************************************************************/

/*
* File: Dependencie.h
* Author: Miguel A. Garcia
* NetID: magarcia1
* Assignment #: 5
* Date: December/10/2014
*
* Description: Street.h contains the class declaration of a class named street. The STREETS section lists
* all streets in the map. Every street has four properties startId, endId, minTravelTime, and maxTravelTime.
* The properties startId and endId represent the two waypoints linked by this street (in that direction).
* The properties minTravelTime and maxTravelTime represent the range of travel time (in minutes) that
* this street could take.
*
*/

/**************************************************************************************************/

#ifndef EDGE_H
#define EDGE_H

#include <vector>
#include <string>

using namespace std;
//Instead of including a Waypoints.h here, we just used tell the compiler "it's a class, don't worry
//about it." This is an example of the usefulness of Forward Declaration.
class Component;

class Edge{
public:
	//only this  edge needs to be created
	Edge(string aname, string aType, Component* adjComponent);
	void addAdjComp(Component* aComponent) { adjComponents.push_back(aComponent); }
	Component* getAdjComponent(int i) const { return this->adjComponents.at(i); }

	//rest of the big 4 are auto-generated by the compiler
	void setName(string aName){ this->name = aName; }
	string getName() const { return this->name; }

	void setSizeSpec(string aSize) { this->sizeSpec = aSize; }
	string getSizeSpec() const { return this->sizeSpec; }

	void setType(string aType){ this->type = aType; }
	string getEndId() const { return this->type; }

	void ChangeSign(bool aSign) { this->signedNum = aSign; }
private:
	//to whom do I connect?
	vector<Component*> adjComponents;
	string name;
	string sizeSpec;
	string type;
	bool signedNum;

};

#endif

/***********************************************************************/