/**************************************************************************************************/

/*
* File: Components.h
* Author: Miguel A. Garcia
* NetID: magarcia1
* Assignment #: 5
* Date: December/10/2014
*
* Description: Component.h contains the class declaration of the Component section that lists all nodes
* in the graph. Each component has a unique integer id. 
*
*/

/**************************************************************************************************/

#ifndef COMPONENT_H
#define COMPONENT_H

//------------------------------------------------------------------------------------------------
#include <string>
#include <vector>
#include "Inoutput.h"

using namespace std;
//------------------------------------------------------------------------------------------------

class Component {
public:
	//The rest of the big 4 are auto-generated by the compiler

	//Only this way-point needs to be created
	//Initialization 
	Component();
	Component(string atype, string aname);
	~Component();
	Component(int id, std::string name);

	void setType(string type);
	void setName(string name);
	void insertInput(Inoutput* anInput);
	void setOutput(Inoutput* anOutput);
	void setSize(int theSize);

	string getType() { return this->type; }
	string getName() { return this->name; }
	Inoutput* getInput(int i) { return this->inputs.at(i); }
	Inoutput* getOutput() { return this->output; }
	int getSize() { return this->sizeoOutput; }
	int getInputSize() { return this->inputs.size(); }
	//our unique identifier
	int getId() const { return this->id; }
	//I have to remember my Name
	void replaceInput(int i, Inoutput* newPut) { this->inputs.at(i) = newPut; }

private:
	string type;
	string name;
	vector<Inoutput*> inputs;
	Inoutput* output;
	int sizeoOutput;
	int id;

};
//------------------------------------------------------------------------------------------------

#endif

//------------------------------------------------------------------------------------------------
